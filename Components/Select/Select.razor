@typeparam TItem
@typeparam TValue
@inject IJSRuntime JS

<div class="custom-select" id="@triggerId">
    <div class="selected" @onclick="Show">
        <i class="bi bi-chevron-compact-down select-icon"></i>
        <span class="select-icon"></span>
        @if (Placeholder != null)
        {
            <img src="@DefaultIcon" height="14" class="mr-1" />
            <span>@Placeholder</span>
        }
        else
        {
            <span class="text-muted">Choose...</span>
        }
    </div>
    <CascadingValue Value="@this" IsFixed="true">

        <div class="dropdown-menu shadow" id="@selectId" style="display: @optionClass">
            @ChildContent
        </div>
    </CascadingValue>
</div>

@code {
    string optionClass = "";
    private string triggerId { get; set; } = Guid.NewGuid().ToString();
    private string selectId { get; set; } = Guid.NewGuid().ToString();

    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public TValue Placeholder { get; set; }
    [Parameter] public string DefaultIcon { get; set; }

    async Task Show()
    {
        await JS.InvokeAsync<object>("SelectToggle", triggerId, selectId);
    }

    public void HandleSelect(TItem item, TValue value, string icon)
    {
        Placeholder = value;
        DefaultIcon = icon;

        if (optionClass == "")
        {
            optionClass = "none";
        }
        else
        {
            optionClass = "";
        }

        StateHasChanged();
    }
}

<style>
    .dropdown-menu {
        width: 18rem;
    }

    .custom-select {
        position: relative;
        width: 18rem;
        text-align: left;
        outline: none;
        height: 2.9rem;
        line-height: 2.9rem;
    }

    .selected {
        border-radius: 6px;
        border: 1px solid #858586;
        color: #080D0E;
        height: 2.9rem;
        padding-left: .5rem;
        cursor: pointer;
        user-select: none;
    }

    .select-icon {
        position: absolute;
        right: 10px;
        height: 0;
    }
</style>


